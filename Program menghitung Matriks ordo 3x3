# Impor modul NumPy
import numpy as np

# Mendefinisikan matriks koefisien (A) dari sistem persamaan linier
A = np.array([[1, 1, 1],   # Persamaan 1: x1 + x2 + x3 = 6
              [1, 2, -1],  # Persamaan 2: x1 + 2x2 - x3 = 2
              [2, 1, 2]])  # Persamaan 3: 2x1 + x2 + 2x3 = 10

# Mendefinisikan vektor hasil (B) dari sistem persamaan linier
B = np.array([6, 2, 10])

# Memeriksa apakah matriks A adalah persegi (jumlah baris = jumlah kolom)
if A.shape[0] != A.shape[1]:
    raise ValueError("Matriks A harus berbentuk persegi (jumlah baris sama dengan jumlah kolom).")

# Memeriksa apakah ukuran matriks A cocok dengan ukuran vektor B
if A.shape[0] != B.shape[0]:
    raise ValueError("Jumlah baris pada matriks A harus sama dengan jumlah elemen pada vektor B.")

# Mencoba menyelesaikan sistem persamaan menggunakan NumPy's solve
try:
    X = np.linalg.solve(A, B)  # Fungsi untuk menyelesaikan persamaan linier A * X = B
except np.linalg.LinAlgError as e:
    print("Terjadi kesalahan saat menyelesaikan sistem persamaan linier:", e)
    exit()

# Tampilkan hasil
print("Solusi sistem persamaan linier adalah:")
print(f"x1 = {X[0]}")
print(f"x2 = {X[1]}")
print(f"x3 = {X[2]}")

# Memastikan solusi dengan cara mengalikan kembali matriks A dengan solusi yang ditemukan
B_calculated = np.dot(A, X)

# Tampilkan perbandingan antara hasil perhitungan dengan vektor B asli
print("\nVerifikasi solusi:")
print(f"Hasil perhitungan ulang (A * X) = {B_calculated}")
print(f"Vektor B asli = {B}")

# Bandingkan hasil dengan B asli, jika sama maka solusi benar
if np.allclose(B_calculated, B):
    print("\nSolusi sudah diverifikasi dan benar!")
else:
    print("\nTerjadi kesalahan pada perhitungan.")
